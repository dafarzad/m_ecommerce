generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  SELLER
}

model User {
  id        String @id @default(uuid())
  firstName String
  lastName  String
  mobile    String @unique
  picture   String @db.Text
  role      Role   @default(USER)

  mobile_otp       String? // Field to store the OTP
  mobile_otpExpiry DateTime? // Field to store the OTP expiration time

  store Store[] @relation("UserStores")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id            String        @id @default(uuid())
  title         String
  image         String
  url           String
  featured      Boolean       @default(false)
  subCategories SubCategory[] @relation("CategoryToSubcategory")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SubCategory {
  id         String   @id @default(uuid())
  title      String
  image      String
  url        String
  featured   Boolean  @default(false)
  categoryId String
  category   Category @relation("CategoryToSubcategory", fields: [categoryId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
}

// ********************* Store Model **********************************

enum StoreStatus {
  PENDING
  ACTIVE
  BENNED
  DISABLED
}

model Store {
  id                     String      @id @default(uuid())
  title                  String
  description            String      @db.Text
  email                  String      @unique
  url                    String      @unique
  phone                  String
  logo                   String
  cover                  String
  status                 StoreStatus @default(PENDING)
  averageRating          Float       @default(0)
  featured               Boolean     @default(false)
  returnPolicy           String?
  defaultShippingService String?
  defaultShippingFee     Float?
  defaultDeliveryTimeMin Int?
  defaultDeliveryTimeMax Int?

  userId String
  user   User   @relation("UserStores", fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

// ********************************************************
